{"version":3,"sources":["components/Dialogs/DialogItem/dialogItem.module.css","components/Dialogs/dialogs.module.css","components/Dialogs/DialogItem/index.jsx","components/Dialogs/Message/index.jsx","components/Dialogs/index.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","src","imgSrc","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","avatarSrc","key","messagesElements","messagesData","dialogs","dialogsItems","messages","values","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,aAAe,iCAAiC,OAAS,6B,oBCA/GD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,4JCgB9FC,EAbI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,kBAAC,IAAD,CAASC,GAAIN,GACX,yBAAKO,IAAKR,EAAMS,SADlB,IAEGT,EAAMU,MACE,M,oCCLFC,EAJC,SAACX,GACf,OAAO,yBAAKG,UAAWC,IAAQQ,SAAUZ,EAAMY,UCkC3CC,EAAeC,YAAiB,KAoBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAAChB,GACtB,OACE,0BAAMkB,SAAUlB,EAAMmB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,YAAY,qBACZX,KAAK,iBACLY,SAAU,CAACC,IAAUV,GACrBW,UAAWC,OAGf,6BACE,oDAUOC,EArDC,SAAC1B,GACf,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAC1B,GAAD,OAC1C,kBAAC,EAAD,CACEK,KAAML,EAAOK,KACbR,GAAIG,EAAOH,GACXO,OAAQJ,EAAO2B,UACfC,IAAK5B,EAAOH,QAIZgC,EAAmBP,EAAMQ,aAAaJ,KAAI,SAACnB,GAAD,OAC5C,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASqB,IAAKrB,EAAQV,QAMlD,OACE,yBAAKC,UAAWC,IAAQgC,SACtB,yBAAKjC,UAAWC,IAAQiC,cAAeR,GACvC,yBAAK1B,UAAWC,IAAQkC,UACrBJ,EACD,kBAACnB,EAAD,CAAqBG,SARL,SAACqB,GACrBvC,EAAMwC,WAAWD,EAAOE,sB,uCCrBxBC,EAA6B,SAACf,GAAD,MAAY,CAC3CgB,OAAQhB,EAAMiB,KAAKD,S,SCiBNE,4BACbC,aAhBoB,SAACnB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YACnBe,OAAQhB,EAAMiB,KAAKD,WAIE,SAACI,GACxB,MAAO,CACLP,WAAY,SAACC,GACXM,EAASC,YAAwBP,UDTP,SAACQ,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKnD,MAAM2C,OACT,kBAACM,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHJ,GACb6C,IAAMH,WAWtC,OAJqCH,YAAQJ,EAARI,CACnCI,KCKWL,CAGbnB","file":"static/js/4.028aac08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogItem_dialog__3dubg\",\"dialogsItems\":\"dialogItem_dialogsItems__B4ECt\",\"active\":\"dialogItem_active__25IHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2RXLB\",\"dialogsItems\":\"dialogs_dialogsItems__2eftW\",\"messages\":\"dialogs_messages__3KCKD\"};","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport classes from \"./dialogItem.module.css\"\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id\r\n\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={path}>\r\n        <img src={props.imgSrc} /> {}\r\n        {props.name}\r\n      </NavLink>{\" \"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from \"react\"\r\nimport classes from \"./message.module.css\"\r\n\r\nconst Message = (props) => {\r\n  return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../utils/validators\"\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\"\r\nimport DialogItem from \"./DialogItem\"\r\nimport classes from \"./dialogs.module.css\"\r\nimport Message from \"./Message\"\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n  let dialogsElements = state.dialogsData.map((dialog) => (\r\n    <DialogItem\r\n      name={dialog.name}\r\n      id={dialog.id}\r\n      imgSrc={dialog.avatarSrc}\r\n      key={dialog.id}\r\n    />\r\n  ))\r\n\r\n  let messagesElements = state.messagesData.map((message) => (\r\n    <Message message={message.message} key={message.id} />\r\n  ))\r\n\r\n  const addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody)\r\n  }\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        {messagesElements}\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n          validate={[required, maxLength100]}\r\n          component={Textarea}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n)\r\n\r\nexport default Dialogs\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  )\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport Dialogs from \".\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\"\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}